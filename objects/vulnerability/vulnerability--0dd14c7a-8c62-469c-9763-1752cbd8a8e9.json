{
    "type": "bundle",
    "id": "bundle--d9bb8afc-a919-43d1-9d2a-aeca117bc8c6",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--0dd14c7a-8c62-469c-9763-1752cbd8a8e9",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-04-11T00:28:27.289849Z",
            "modified": "2024-04-11T00:28:27.289849Z",
            "name": "CVE-2021-47218",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nselinux: fix NULL-pointer dereference when hashtab allocation fails\n\nWhen the hash table slot array allocation fails in hashtab_init(),\nh->size is left initialized with a non-zero value, but the h->htable\npointer is NULL. This may then cause a NULL pointer dereference, since\nthe policydb code relies on the assumption that even after a failed\nhashtab_init(), hashtab_map() and hashtab_destroy() can be safely called\non it. Yet, these detect an empty hashtab only by looking at the size.\n\nFix this by making sure that hashtab_init() always leaves behind a valid\nempty hashtab when the allocation fails.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47218"
                }
            ]
        }
    ]
}