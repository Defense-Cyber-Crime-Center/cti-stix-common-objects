{
    "type": "bundle",
    "id": "bundle--5062c2df-13f4-40c3-aebf-611cca317135",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--156e7728-2179-4c2b-87e1-68db0068a2d7",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-25T00:28:33.002211Z",
            "modified": "2024-05-25T00:28:33.002211Z",
            "name": "CVE-2021-47519",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: m_can: m_can_read_fifo: fix memory leak in error branch\n\nIn m_can_read_fifo(), if the second call to m_can_fifo_read() fails,\nthe function jump to the out_fail label and returns without calling\nm_can_receive_skb(). This means that the skb previously allocated by\nalloc_can_skb() is not freed. In other terms, this is a memory leak.\n\nThis patch adds a goto label to destroy the skb if an error occurs.\n\nIssue was found with GCC -fanalyzer, please follow the link below for\ndetails.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47519"
                }
            ]
        }
    ]
}