{
    "type": "bundle",
    "id": "bundle--641e2cd1-7c63-45a6-9b83-4a575abcee66",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--2d9886e5-7cb9-4e5c-936e-01a8fac87edf",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-06-20T00:29:55.943451Z",
            "modified": "2024-06-20T00:29:55.943451Z",
            "name": "CVE-2021-47583",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mxl111sf: change mutex_init() location\n\nSyzbot reported, that mxl111sf_ctrl_msg() uses uninitialized\nmutex. The problem was in wrong mutex_init() location.\n\nPrevious mutex_init(&state->msg_lock) call was in ->init() function, but\ndvb_usbv2_init() has this order of calls:\n\n\tdvb_usbv2_init()\n\t  dvb_usbv2_adapter_init()\n\t    dvb_usbv2_adapter_frontend_init()\n\t      props->frontend_attach()\n\n\t  props->init()\n\nSince mxl111sf_* devices call mxl111sf_ctrl_msg() in ->frontend_attach()\ninternally we need to initialize state->msg_lock before\nfrontend_attach(). To achieve it, ->probe() call added to all mxl111sf_*\ndevices, which will simply initiaize mutex.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47583"
                }
            ]
        }
    ]
}