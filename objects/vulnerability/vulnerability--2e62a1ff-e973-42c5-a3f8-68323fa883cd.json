{
    "type": "bundle",
    "id": "bundle--29b5224d-01e0-486d-be0d-324f05e51f7f",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--2e62a1ff-e973-42c5-a3f8-68323fa883cd",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-04-11T00:28:31.190349Z",
            "modified": "2024-04-11T00:28:31.190349Z",
            "name": "CVE-2024-26800",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix use-after-free on failed backlog decryption\n\nWhen the decrypt request goes to the backlog and crypto_aead_decrypt\nreturns -EBUSY, tls_do_decryption will wait until all async\ndecryptions have completed. If one of them fails, tls_do_decryption\nwill return -EBADMSG and tls_decrypt_sg jumps to the error path,\nreleasing all the pages. But the pages have been passed to the async\ncallback, and have already been released by tls_decrypt_done.\n\nThe only true async case is when crypto_aead_decrypt returns\n -EINPROGRESS. With -EBUSY, we already waited so we can tell\ntls_sw_recvmsg that the data is available for immediate copy, but we\nneed to notify tls_decrypt_sg (via the new ->async_done flag) that the\nmemory has already been released.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-26800"
                }
            ]
        }
    ]
}