{
    "type": "bundle",
    "id": "bundle--d6d08a83-b585-4de5-8a77-b6a9e85c6649",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--2e9ab4fb-6ab4-4cdb-aaac-54eb41c73576",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-25T00:28:33.081935Z",
            "modified": "2024-05-25T00:28:33.081935Z",
            "name": "CVE-2021-47533",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vc4: kms: Clear the HVS FIFO commit pointer once done\n\nCommit 9ec03d7f1ed3 (\"drm/vc4: kms: Wait on previous FIFO users before a\ncommit\") introduced a wait on the previous commit done on a given HVS\nFIFO.\n\nHowever, we never cleared that pointer once done. Since\ndrm_crtc_commit_put can free the drm_crtc_commit structure directly if\nwe were the last user, this means that it can lead to a use-after free\nif we were to duplicate the state, and that stale pointer would even be\ncopied to the new state.\n\nSet the pointer to NULL once we're done with the wait so that we don't\ncarry over a pointer to a free'd structure.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47533"
                }
            ]
        }
    ]
}