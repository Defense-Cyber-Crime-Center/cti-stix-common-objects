{
    "type": "bundle",
    "id": "bundle--1ac6ea7e-756d-4a2c-830e-582c8cd22b7f",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--37612e93-6cec-4d37-ac2f-8cbca21a9bf5",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-27T00:38:15.265676Z",
            "modified": "2025-02-27T00:38:15.265676Z",
            "name": "CVE-2022-49610",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: VMX: Prevent RSB underflow before vmenter\n\nOn VMX, there are some balanced returns between the time the guest's\nSPEC_CTRL value is written, and the vmenter.\n\nBalanced returns (matched by a preceding call) are usually ok, but it's\nat least theoretically possible an NMI with a deep call stack could\nempty the RSB before one of the returns.\n\nFor maximum paranoia, don't allow *any* returns (balanced or otherwise)\nbetween the SPEC_CTRL write and the vmenter.\n\n  [ bp: Fix 32-bit build. ]",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49610"
                }
            ]
        }
    ]
}