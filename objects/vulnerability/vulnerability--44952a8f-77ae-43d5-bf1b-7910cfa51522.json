{
    "type": "bundle",
    "id": "bundle--d9ece64e-63e8-49a4-b094-11e4ee1de81e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--44952a8f-77ae-43d5-bf1b-7910cfa51522",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-22T00:29:02.034467Z",
            "modified": "2024-05-22T00:29:02.034467Z",
            "name": "CVE-2021-47245",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: synproxy: Fix out of bounds when parsing TCP options\n\nThe TCP option parser in synproxy (synproxy_parse_options) could read\none byte out of bounds. When the length is 1, the execution flow gets\ninto the loop, reads one byte of the opcode, and if the opcode is\nneither TCPOPT_EOL nor TCPOPT_NOP, it reads one more byte, which exceeds\nthe length of 1.\n\nThis fix is inspired by commit 9609dad263f8 (\"ipv4: tcp_input: fix stack\nout of bounds when parsing TCP options.\").\n\nv2 changes:\n\nAdded an early return when length < 0 to avoid calling\nskb_header_pointer with negative length.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47245"
                }
            ]
        }
    ]
}