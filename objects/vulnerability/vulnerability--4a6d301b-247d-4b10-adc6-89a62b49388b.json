{
    "type": "bundle",
    "id": "bundle--3e33c305-d277-40ac-ab1b-d75a376c70de",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--4a6d301b-247d-4b10-adc6-89a62b49388b",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-01-06T00:28:10.596Z",
            "modified": "2024-01-06T00:28:10.596Z",
            "name": "CVE-2023-34324",
            "description": "Closing of an event channel in the Linux kernel can result in a deadlock.\nThis happens when the close is being performed in parallel to an unrelated\nXen console action and the handling of a Xen console interrupt in an\nunprivileged guest.\n\nThe closing of an event channel is e.g. triggered by removal of a\nparavirtual device on the other side. As this action will cause console\nmessages to be issued on the other side quite often, the chance of\ntriggering the deadlock is not neglectable.\n\nNote that 32-bit Arm-guests are not affected, as the 32-bit Linux kernel\non Arm doesn't use queued-RW-locks, which are required to trigger the\nissue (on Arm32 a waiting writer doesn't block further readers to get\nthe lock).\n",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-34324"
                }
            ]
        }
    ]
}