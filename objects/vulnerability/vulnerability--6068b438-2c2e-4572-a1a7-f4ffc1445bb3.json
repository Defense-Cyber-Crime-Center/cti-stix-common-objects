{
    "type": "bundle",
    "id": "bundle--f39df876-bbb3-482c-8a73-faf9ae56d138",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--6068b438-2c2e-4572-a1a7-f4ffc1445bb3",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2023-09-23T00:25:05.127261Z",
            "modified": "2023-09-23T00:25:05.127261Z",
            "name": "CVE-2023-42811",
            "description": "aes-gcm is a pure Rust implementation of the AES-GCM. Starting in version 0.10.0 and prior to version 0.10.3, in the AES GCM implementation of decrypt_in_place_detached, the decrypted ciphertext (i.e. the correct plaintext) is exposed even if tag verification fails. If a program using the `aes-gcm` crate's `decrypt_in_place*` APIs accesses the buffer after decryption failure, it will contain a decryption of an unauthenticated input. Depending on the specific nature of the program this may enable Chosen Ciphertext Attacks (CCAs) which can cause a catastrophic breakage of the cipher including full plaintext recovery. Version 0.10.3 contains a fix for this issue.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-42811"
                }
            ]
        }
    ]
}