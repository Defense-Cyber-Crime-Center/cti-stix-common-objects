{
    "type": "bundle",
    "id": "bundle--01d51230-a99d-40c7-98f8-48b3c61cfa01",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--6140bd0a-30c5-4486-86ce-0d3a816cc299",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-09-03T00:33:35.040267Z",
            "modified": "2024-09-03T00:33:35.040267Z",
            "name": "CVE-2024-45311",
            "description": "Quinn is a pure-Rust, async-compatible implementation of the IETF QUIC transport protocol. As of quinn-proto 0.11, it is possible for a server to `accept()`, `retry()`, `refuse()`, or `ignore()` an `Incoming` connection. However, calling `retry()` on an unvalidated connection exposes the server to a likely panic in the following situations:  1. Calling `refuse` or `ignore` on the resulting validated connection, if a duplicate initial packet is received. This issue can go undetected until a server's `refuse()`/`ignore()` code path is exercised, such as to stop a denial of service attack. 2. Accepting when the initial packet for the resulting validated connection fails to decrypt or exhausts connection IDs, if a similar initial packet that successfully decrypts and doesn't exhaust connection IDs is received. This issue can go undetected if clients are well-behaved. The former situation was observed in a real application, while the latter is only theoretical.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-45311"
                }
            ]
        }
    ]
}