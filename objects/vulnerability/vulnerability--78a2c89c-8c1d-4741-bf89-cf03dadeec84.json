{
    "type": "bundle",
    "id": "bundle--dc385829-82f4-4445-9f66-bc01e8565ed5",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--78a2c89c-8c1d-4741-bf89-cf03dadeec84",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-01-03T00:28:15.425585Z",
            "modified": "2024-01-03T00:28:15.425585Z",
            "name": "CVE-2024-21629",
            "description": "Rust EVM is an Ethereum Virtual Machine interpreter. In `rust-evm`, a feature called `record_external_operation` was introduced, allowing library users to record custom gas changes. This feature can have some bogus interactions with the call stack. In particular, during finalization of a `CREATE` or `CREATE2`, in the case that the substack execution happens successfully, `rust-evm` will first commit the substate, and then call `record_external_operation(Write(out_code.len()))`. If `record_external_operation` later fails, this error is returned to the parent call stack, instead of `Succeeded`. Yet, the substate commitment already happened. This causes smart contracts able to commit state changes, when the parent caller contract receives zero address (which usually indicates that the execution has failed). This issue only impacts library users with custom `record_external_operation` that returns errors. The issue is patched in release 0.41.1. No known workarounds are available.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-21629"
                }
            ]
        }
    ]
}