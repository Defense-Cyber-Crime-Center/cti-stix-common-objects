{
    "type": "bundle",
    "id": "bundle--a5a76659-c303-40a4-8aa2-71b5e5932346",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--8afbef33-1a6f-47b9-a088-cc24bb9cbb8a",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-04-11T00:28:36.857161Z",
            "modified": "2024-04-11T00:28:36.857161Z",
            "name": "CVE-2023-45288",
            "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-45288"
                }
            ]
        }
    ]
}