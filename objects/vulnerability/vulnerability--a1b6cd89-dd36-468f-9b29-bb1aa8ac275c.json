{
    "type": "bundle",
    "id": "bundle--058b1a9e-3f26-4301-9739-cb3404965c03",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a1b6cd89-dd36-468f-9b29-bb1aa8ac275c",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-27T00:38:15.6831Z",
            "modified": "2025-02-27T00:38:15.6831Z",
            "name": "CVE-2022-49675",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntick/nohz: unexport __init-annotated tick_nohz_full_setup()\n\nEXPORT_SYMBOL and __init is a bad combination because the .init.text\nsection is freed up after the initialization. Hence, modules cannot\nuse symbols annotated __init. The access to a freed symbol may end up\nwith kernel panic.\n\nmodpost used to detect it, but it had been broken for a decade.\n\nCommit 28438794aba4 (\"modpost: fix section mismatch check for exported\ninit/exit sections\") fixed it so modpost started to warn it again, then\nthis showed up:\n\n    MODPOST vmlinux.symvers\n  WARNING: modpost: vmlinux.o(___ksymtab_gpl+tick_nohz_full_setup+0x0): Section mismatch in reference from the variable __ksymtab_tick_nohz_full_setup to the function .init.text:tick_nohz_full_setup()\n  The symbol tick_nohz_full_setup is exported and annotated __init\n  Fix this by removing the __init annotation of tick_nohz_full_setup or drop the export.\n\nDrop the export because tick_nohz_full_setup() is only called from the\nbuilt-in code in kernel/sched/isolation.c.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49675"
                }
            ]
        }
    ]
}