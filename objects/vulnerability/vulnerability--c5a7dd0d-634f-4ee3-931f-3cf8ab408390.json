{
    "type": "bundle",
    "id": "bundle--8111a2dd-9105-4aec-8b83-ef1510dede11",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--c5a7dd0d-634f-4ee3-931f-3cf8ab408390",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-08-20T00:32:20.081445Z",
            "modified": "2024-08-20T00:32:20.081445Z",
            "name": "CVE-2024-43856",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndma: fix call order in dmam_free_coherent\n\ndmam_free_coherent() frees a DMA allocation, which makes the\nfreed vaddr available for reuse, then calls devres_destroy()\nto remove and free the data structure used to track the DMA\nallocation. Between the two calls, it is possible for a\nconcurrent task to make an allocation with the same vaddr\nand add it to the devres list.\n\nIf this happens, there will be two entries in the devres list\nwith the same vaddr and devres_destroy() can free the wrong\nentry, triggering the WARN_ON() in dmam_match.\n\nFix by destroying the devres entry before freeing the DMA\nallocation.\n\n  kokonut //net/encryption\n    http://sponge2/b9145fe6-0f72-4325-ac2f-a84d81075b03",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-43856"
                }
            ]
        }
    ]
}