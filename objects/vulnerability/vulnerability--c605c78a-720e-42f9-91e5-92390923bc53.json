{
    "type": "bundle",
    "id": "bundle--39204c6f-372a-408d-a863-a85bfbab901e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--c605c78a-720e-42f9-91e5-92390923bc53",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-06T00:35:56.542604Z",
            "modified": "2024-11-06T00:35:56.542604Z",
            "name": "CVE-2024-36935",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: ensure the copied buf is NUL terminated\n\nCurrently, we allocate a count-sized kernel buffer and copy count bytes\nfrom userspace to that buffer. Later, we use sscanf on this buffer but we\ndon't ensure that the string is terminated inside the buffer, this can lead\nto OOB read when using sscanf. Fix this issue by using memdup_user_nul\ninstead of memdup_user.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-36935"
                }
            ]
        }
    ]
}