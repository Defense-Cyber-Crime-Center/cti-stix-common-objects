{
    "type": "bundle",
    "id": "bundle--e4881616-bd04-49e7-aa56-aadd88413611",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--c89afeb9-f297-4b54-90df-d8e557c0d82b",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-25T00:28:33.114947Z",
            "modified": "2024-05-25T00:28:33.114947Z",
            "name": "CVE-2021-47556",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nethtool: ioctl: fix potential NULL deref in ethtool_set_coalesce()\n\nethtool_set_coalesce() now uses both the .get_coalesce() and\n.set_coalesce() callbacks. But the check for their availability is\nbuggy, so changing the coalesce settings on a device where the driver\nprovides only _one_ of the callbacks results in a NULL pointer\ndereference instead of an -EOPNOTSUPP.\n\nFix the condition so that the availability of both callbacks is\nensured. This also matches the netlink code.\n\nNote that reproducing this requires some effort - it only affects the\nlegacy ioctl path, and needs a specific combination of driver options:\n- have .get_coalesce() and .coalesce_supported but no\n .set_coalesce(), or\n- have .set_coalesce() but no .get_coalesce(). Here eg. ethtool doesn't\n  cause the crash as it first attempts to call ethtool_get_coalesce()\n  and bails out on error.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47556"
                }
            ]
        }
    ]
}