{
    "type": "bundle",
    "id": "bundle--ef407a9d-c80c-4995-bba3-e8ac67a418bd",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--de06272c-c50d-4b71-8b3e-8d4a33b205bc",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-03-02T00:25:55.755835Z",
            "modified": "2024-03-02T00:25:55.755835Z",
            "name": "CVE-2021-47081",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhabanalabs/gaudi: Fix a potential use after free in gaudi_memset_device_memory\n\nOur code analyzer reported a uaf.\n\nIn gaudi_memset_device_memory, cb is get via hl_cb_kernel_create()\nwith 2 refcount.\nIf hl_cs_allocate_job() failed, the execution runs into release_cb\nbranch. One ref of cb is dropped by hl_cb_put(cb) and could be freed\nif other thread also drops one ref. Then cb is used by cb->id later,\nwhich is a potential uaf.\n\nMy patch add a variable 'id' to accept the value of cb->id before the\nhl_cb_put(cb) is called, to avoid the potential uaf.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47081"
                }
            ]
        }
    ]
}