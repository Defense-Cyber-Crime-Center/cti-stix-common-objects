{
    "type": "bundle",
    "id": "bundle--8826caa5-2421-408a-99c6-93fe82ac84a9",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--e9090c7f-8cc1-407c-94ef-6903a89ed34f",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-07-17T00:31:59.3084Z",
            "modified": "2024-07-17T00:31:59.3084Z",
            "name": "CVE-2022-48828",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix ia_size underflow\n\niattr::ia_size is a loff_t, which is a signed 64-bit type. NFSv3 and\nNFSv4 both define file size as an unsigned 64-bit type. Thus there\nis a range of valid file size values an NFS client can send that is\nalready larger than Linux can handle.\n\nCurrently decode_fattr4() dumps a full u64 value into ia_size. If\nthat value happens to be larger than S64_MAX, then ia_size\nunderflows. I'm about to fix up the NFSv3 behavior as well, so let's\ncatch the underflow in the common code path: nfsd_setattr().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-48828"
                }
            ]
        }
    ]
}